
==================== FINAL INTERFACE ====================
2018-03-19 03:54:30.567698134 UTC

interface main:Timestuff 8022
  interface hash: f95bee2a908a4a861ca3735930395807
  ABI hash: b651a46f78ada1d787557c7f771bf1ff
  export-list hash: 71a78ea6352ecde6930e83b800f0f0c5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5426543fe9f16b74451ef1711d1986ec
  sig of: Nothing
  used TH splices: False
  where
exports:
  Timestuff.dateFromInt
  Timestuff.dateTime
  Timestuff.getDate
  Timestuff.numDays
  Timestuff.numYears
  Timestuff.utcMod
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0* deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 time-1.8.0.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
import  -/  time-1.8.0.2:Data.Time 801fb868684a9ca732a26c8ef6b804aa
import  -/  time-1.8.0.2:Data.Time.Calendar.Days 4846256080fdf5d26eb4d3beb118c405
import  -/  time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime bc28a0c1852c38d7bbec9956b7aa6223
import  -/  time-1.8.0.2:Data.Time.Clock.Internal.UTCDiff 65e91f53c7136fa33a35fff03f066598
import  -/  time-1.8.0.2:Data.Time.Clock.Internal.UTCTime 71bab4ae2f93d15d9b706c230968f165
import  -/  time-1.8.0.2:Data.Time.Format.Locale 8e699a575db4d72d9f4385c688cba89c
import  -/  time-1.8.0.2:Data.Time.Format.Parse bef99b9cc6725c1357fc485bc89e38d6
c552327a0600725fc1b846ccf1386028
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Timestuff.$trModule3
                   Timestuff.$trModule1) -}
ab5ad4f5b448fb048aa904a97e68f93c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Timestuff.$trModule2) -}
916c2c5f69754843fad8cc5f93a8b982
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Timestuff"#) -}
69a2ee2d7b30844a9b4d0ea243703ef6
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Timestuff.$trModule4) -}
7d9954255977d9c2d74b0a4bcbac67d5
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d30fdfe286fcbbb62553f15bdbfad798
  $wdateFromInt ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> (# Data.Time.Calendar.Days.Day,
          Data.Time.Clock.Internal.DiffTime.DiffTime #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: GHC.Integer.Type.Integer) ->
                 (# Data.Time.Format.Parse.parseTimeOrError
                      @ Data.Time.Calendar.Days.Day
                      Data.Time.Format.Parse.$fParseTimeDay_$cbuildTime
                        `cast`
                      (Sym (Data.Time.Format.Parse.N:ParseTime[0]
                                <Data.Time.Calendar.Days.Day>_N))
                      GHC.Types.True
                      Data.Time.Format.Locale.defaultTimeLocale
                      Timestuff.dateFromInt4
                      (case GHC.Show.$w$cshowsPrec4
                              0#
                              w
                              (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Types.: @ GHC.Types.Char ww3 ww4)
                         (GHC.CString.unpackAppendCString#
                            Timestuff.dateFromInt3
                            (case GHC.Show.$w$cshowsPrec4
                                    0#
                                    w1
                                    (GHC.Types.[] @ GHC.Types.Char) of ww1 { (#,#) ww5 ww6 ->
                             GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                               (GHC.CString.unpackAppendCString#
                                  Timestuff.dateFromInt3
                                  (case GHC.Show.$w$cshowsPrec4
                                          0#
                                          w2
                                          (GHC.Types.[] @ GHC.Types.Char) of ww7 { (#,#) ww8 ww9 ->
                                   GHC.Types.: @ GHC.Types.Char ww8 ww9 })) })) }),
                    Timestuff.dateFromInt1
                      `cast`
                    (Trans
                         (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                         (Sym (Data.Time.Clock.Internal.DiffTime.N:DiffTime[0]))) #)) -}
e9dcbd095f39b26a0f653279192e2197
  $wdateTime ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> (# Data.Time.Calendar.Days.Day,
          Data.Time.Clock.Internal.DiffTime.DiffTime #)
  {- Arity: 3, Strictness: <L,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: GHC.Integer.Type.Integer) ->
                 (# Timestuff.getDate w,
                    case GHC.Integer.Type.plusInteger
                           (GHC.Integer.Type.timesInteger w1 Timestuff.dateTime2)
                           (GHC.Integer.Type.timesInteger
                              w2
                              Timestuff.dateTime1) of dt { DEFAULT ->
                    (Data.Time.Clock.Internal.DiffTime.$w$cfromRational
                       dt
                       GHC.Real.$fEnumRatio1)
                      `cast`
                    (Trans
                         (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                         (Sym (Data.Time.Clock.Internal.DiffTime.N:DiffTime[0]))) } #)) -}
4eb9794175f4e4ade3a539d5b4358acc
  $wnumDays ::
    Data.Time.Calendar.Days.Day
    -> Data.Time.Clock.Internal.DiffTime.DiffTime
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Clock.Internal.DiffTime.DiffTime
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,1*U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Time.Calendar.Days.Day)
                   (ww1 :: Data.Time.Clock.Internal.DiffTime.DiffTime)
                   (ww2 :: Data.Time.Calendar.Days.Day)
                   (ww3 :: Data.Time.Clock.Internal.DiffTime.DiffTime) ->
                 Data.Time.Clock.Internal.NominalDiffTime.$fFractionalNominalDiffTime4
                   (GHC.Integer.Type.minusInteger
                      (Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww ww1)
                        `cast`
                      (Nth:2
                           (Trans
                                (<Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                 ->_R <Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                 ->_R Trans
                                          (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                          (Nth:3
                                               (Nth:3
                                                    (Trans
                                                         (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          ->_R Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P)
                                                         (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                          ->_R Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P
                                                          ->_R <GHC.Integer.Type.Integer>_R)))))
                                (Trans
                                     (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                     (Nth:2
                                          (Trans
                                               (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                ->_R Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                               (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                ->_R Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                ->_R <GHC.Integer.Type.Integer>_R)))
                                 ->_R Trans
                                          (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                          (Nth:2
                                               (Nth:3
                                                    (Trans
                                                         (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          ->_R Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P)
                                                         (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                          ->_R Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P
                                                          ->_R <GHC.Integer.Type.Integer>_R))))
                                 ->_R <GHC.Integer.Type.Integer>_R)))
                      (Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww2 ww3)
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Trans
                                     (<Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                      ->_R <Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                      ->_R Trans
                                               (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                               (Nth:3
                                                    (Nth:3
                                                         (Trans
                                                              (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                               ->_R <Data.Fixed.Fixed
                                                                       Data.Fixed.E12>_R
                                                               ->_R Data.Fixed.N:Fixed[0]
                                                                        <Data.Fixed.E12>_P)
                                                              (Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P
                                                               ->_R Data.Fixed.N:Fixed[0]
                                                                        <Data.Fixed.E12>_P
                                                               ->_R <GHC.Integer.Type.Integer>_R)))))
                                     (Trans
                                          (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                          (Nth:2
                                               (Trans
                                                    (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                     ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                     ->_R Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                    (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                     ->_R Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                     ->_R <GHC.Integer.Type.Integer>_R)))
                                      ->_R Trans
                                               (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                               (Nth:2
                                                    (Nth:3
                                                         (Trans
                                                              (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                               ->_R <Data.Fixed.Fixed
                                                                       Data.Fixed.E12>_R
                                                               ->_R Data.Fixed.N:Fixed[0]
                                                                        <Data.Fixed.E12>_P)
                                                              (Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P
                                                               ->_R Data.Fixed.N:Fixed[0]
                                                                        <Data.Fixed.E12>_P
                                                               ->_R <GHC.Integer.Type.Integer>_R))))
                                      ->_R <GHC.Integer.Type.Integer>_R)))))
                     `cast`
                   (Nth:3
                        (Nth:3
                             (Trans
                                  (Trans
                                       (Nth:2
                                            (Trans
                                                 (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                  ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                <Data.Fixed.E12>_P)
                                                  ->_R <GHC.Integer.Type.Integer>_R)
                                                 (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                  ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                  ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                <Data.Fixed.E12>_P))))
                                       (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))
                                   ->_R Trans
                                            (Nth:2
                                                 (Nth:3
                                                      (Trans
                                                           (Sym (Data.Fixed.N:Fixed[0]
                                                                     <Data.Fixed.E12>_P)
                                                            ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                          <Data.Fixed.E12>_P)
                                                            ->_R <GHC.Integer.Type.Integer>_R)
                                                           (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                            ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                            ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                          <Data.Fixed.E12>_P)))))
                                            (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))
                                   ->_R <GHC.Integer.Type.Integer>_R)
                                  (<Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                   ->_R <Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                   ->_R Trans
                                            (Nth:3
                                                 (Nth:3
                                                      (Trans
                                                           (Sym (Data.Fixed.N:Fixed[0]
                                                                     <Data.Fixed.E12>_P)
                                                            ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                          <Data.Fixed.E12>_P)
                                                            ->_R <GHC.Integer.Type.Integer>_R)
                                                           (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                            ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                            ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                          <Data.Fixed.E12>_P)))))
                                            (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))))))
                   Data.Time.Clock.Internal.NominalDiffTime.nominalDay1
                     `cast`
                   (Trans
                        (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                        (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])))) -}
f8499ddd599a25ec1d4e188c40ac918e
  $wnumYears ::
    Data.Time.Calendar.Days.Day
    -> Data.Time.Clock.Internal.DiffTime.DiffTime
    -> Data.Time.Calendar.Days.Day
    -> Data.Time.Clock.Internal.DiffTime.DiffTime
    -> GHC.Integer.Type.Integer
  {- Arity: 4, Strictness: <S,1*U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Time.Calendar.Days.Day)
                   (ww1 :: Data.Time.Clock.Internal.DiffTime.DiffTime)
                   (ww2 :: Data.Time.Calendar.Days.Day)
                   (ww3 :: Data.Time.Clock.Internal.DiffTime.DiffTime) ->
                 Data.Fixed.$fRealFracFixed_$ctruncate
                   @ Data.Fixed.E12
                   Data.Fixed.$fHasResolutionE12_$cresolution
                     `cast`
                   (Sym (Data.Fixed.N:HasResolution[0] <Data.Fixed.E12>_N))
                   @ GHC.Integer.Type.Integer
                   GHC.Real.$fIntegralInteger
                   (Data.Time.Clock.Internal.NominalDiffTime.$fFractionalNominalDiffTime4
                      (GHC.Integer.Type.minusInteger
                         (Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww ww1)
                           `cast`
                         (Nth:2
                              (Trans
                                   (<Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                    ->_R <Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                    ->_R Trans
                                             (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                             (Nth:3
                                                  (Nth:3
                                                       (Trans
                                                            (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                             ->_R <Data.Fixed.Fixed
                                                                     Data.Fixed.E12>_R
                                                             ->_R Data.Fixed.N:Fixed[0]
                                                                      <Data.Fixed.E12>_P)
                                                            (Data.Fixed.N:Fixed[0]
                                                                 <Data.Fixed.E12>_P
                                                             ->_R Data.Fixed.N:Fixed[0]
                                                                      <Data.Fixed.E12>_P
                                                             ->_R <GHC.Integer.Type.Integer>_R)))))
                                   (Trans
                                        (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                        (Nth:2
                                             (Trans
                                                  (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                   ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                   ->_R Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                  (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                   ->_R Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                   ->_R <GHC.Integer.Type.Integer>_R)))
                                    ->_R Trans
                                             (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                             (Nth:2
                                                  (Nth:3
                                                       (Trans
                                                            (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                             ->_R <Data.Fixed.Fixed
                                                                     Data.Fixed.E12>_R
                                                             ->_R Data.Fixed.N:Fixed[0]
                                                                      <Data.Fixed.E12>_P)
                                                            (Data.Fixed.N:Fixed[0]
                                                                 <Data.Fixed.E12>_P
                                                             ->_R Data.Fixed.N:Fixed[0]
                                                                      <Data.Fixed.E12>_P
                                                             ->_R <GHC.Integer.Type.Integer>_R))))
                                    ->_R <GHC.Integer.Type.Integer>_R)))
                         (Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww2 ww3)
                           `cast`
                         (Nth:2
                              (Nth:3
                                   (Trans
                                        (<Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                         ->_R <Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                         ->_R Trans
                                                  (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Data.Fixed.Fixed
                                                                     Data.Fixed.E12>_R
                                                                  ->_R <Data.Fixed.Fixed
                                                                          Data.Fixed.E12>_R
                                                                  ->_R Data.Fixed.N:Fixed[0]
                                                                           <Data.Fixed.E12>_P)
                                                                 (Data.Fixed.N:Fixed[0]
                                                                      <Data.Fixed.E12>_P
                                                                  ->_R Data.Fixed.N:Fixed[0]
                                                                           <Data.Fixed.E12>_P
                                                                  ->_R <GHC.Integer.Type.Integer>_R)))))
                                        (Trans
                                             (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                             (Nth:2
                                                  (Trans
                                                       (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                        ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                        ->_R Data.Fixed.N:Fixed[0]
                                                                 <Data.Fixed.E12>_P)
                                                       (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                        ->_R Data.Fixed.N:Fixed[0]
                                                                 <Data.Fixed.E12>_P
                                                        ->_R <GHC.Integer.Type.Integer>_R)))
                                         ->_R Trans
                                                  (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])
                                                  (Nth:2
                                                       (Nth:3
                                                            (Trans
                                                                 (<Data.Fixed.Fixed
                                                                     Data.Fixed.E12>_R
                                                                  ->_R <Data.Fixed.Fixed
                                                                          Data.Fixed.E12>_R
                                                                  ->_R Data.Fixed.N:Fixed[0]
                                                                           <Data.Fixed.E12>_P)
                                                                 (Data.Fixed.N:Fixed[0]
                                                                      <Data.Fixed.E12>_P
                                                                  ->_R Data.Fixed.N:Fixed[0]
                                                                           <Data.Fixed.E12>_P
                                                                  ->_R <GHC.Integer.Type.Integer>_R))))
                                         ->_R <GHC.Integer.Type.Integer>_R)))))
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Trans
                                          (Nth:2
                                               (Trans
                                                    (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                     ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P)
                                                     ->_R <GHC.Integer.Type.Integer>_R)
                                                    (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                     ->_R <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                     ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                   <Data.Fixed.E12>_P))))
                                          (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))
                                      ->_R Trans
                                               (Nth:2
                                                    (Nth:3
                                                         (Trans
                                                              (Sym (Data.Fixed.N:Fixed[0]
                                                                        <Data.Fixed.E12>_P)
                                                               ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                             <Data.Fixed.E12>_P)
                                                               ->_R <GHC.Integer.Type.Integer>_R)
                                                              (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                               ->_R <Data.Fixed.Fixed
                                                                       Data.Fixed.E12>_R
                                                               ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                             <Data.Fixed.E12>_P)))))
                                               (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))
                                      ->_R <GHC.Integer.Type.Integer>_R)
                                     (<Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                      ->_R <Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime>_R
                                      ->_R Trans
                                               (Nth:3
                                                    (Nth:3
                                                         (Trans
                                                              (Sym (Data.Fixed.N:Fixed[0]
                                                                        <Data.Fixed.E12>_P)
                                                               ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                             <Data.Fixed.E12>_P)
                                                               ->_R <GHC.Integer.Type.Integer>_R)
                                                              (<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                               ->_R <Data.Fixed.Fixed
                                                                       Data.Fixed.E12>_R
                                                               ->_R Sym (Data.Fixed.N:Fixed[0]
                                                                             <Data.Fixed.E12>_P)))))
                                               (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))))))
                      Timestuff.numYears1
                        `cast`
                      (Trans
                           (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                           (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))))
                     `cast`
                   (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))) -}
aef22907ecef96c74ca65b3c38b4dbe2
  dateFromInt ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Integer.Type.Integer)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: GHC.Integer.Type.Integer) ->
                 case Timestuff.$wdateFromInt w w1 w2 of ww { (#,#) ww1 ww2 ->
                 Data.Time.Clock.Internal.UTCTime.UTCTime ww1 ww2 }) -}
26351c8fa7659b926522e0abae121b8e
  dateFromInt1 :: GHC.Integer.Type.Integer
  {- Unfolding: (Data.Time.Clock.Internal.DiffTime.$w$cfromRational
                   Timestuff.dateFromInt2
                   GHC.Real.$fEnumRatio1) -}
7fc5d3c3b84c33566bc45f25f2953715
  dateFromInt2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
dcb471233d3ebc20f42965ada22d23cb
  dateFromInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
947719847efd30c3cf2fdb7285a94008
  dateFromInt4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Timestuff.dateFromInt5) -}
9ba336bdf679a347498ab1991d1e4d56
  dateFromInt5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("%Y-%-m-%-d"#) -}
be04a561595bef9609cc4a0c25b93155
  dateTime ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
  {- Arity: 3, Strictness: <L,U><L,1*U><L,1*U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Integer.Type.Integer)
                   (w2 :: GHC.Integer.Type.Integer) ->
                 case Timestuff.$wdateTime w w1 w2 of ww { (#,#) ww1 ww2 ->
                 Data.Time.Clock.Internal.UTCTime.UTCTime ww1 ww2 }) -}
24e66761451f5387e342e4af6cf2f823
  dateTime1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (60) -}
86c70801286c5a0f22e3b79d79aee347
  dateTime2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3600) -}
a1efdc892ec002aaec9b036836588244
  getDate :: GHC.Base.String -> Data.Time.Calendar.Days.Day
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Data.Time.Format.Parse.parseTimeOrError
                   @ Data.Time.Calendar.Days.Day
                   Data.Time.Format.Parse.$fParseTimeDay_$cbuildTime
                     `cast`
                   (Sym (Data.Time.Format.Parse.N:ParseTime[0]
                             <Data.Time.Calendar.Days.Day>_N))
                   GHC.Types.True
                   Data.Time.Format.Locale.defaultTimeLocale
                   Timestuff.dateFromInt4
                   x) -}
e47523ca80148af46de882f576b8d833
  numDays ::
    Data.Time.Clock.Internal.UTCTime.UTCTime
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime
  {- Arity: 2, Strictness: <S(SS),1*U(1*U,U)><S(SS),1*U(1*U,U)>,
     Unfolding: InlineRule (0, True, True)
                Timestuff.numDays1
                  `cast`
                (<Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                 ->_R <Data.Time.Clock.Internal.UTCTime.UTCTime>_R
                 ->_R Trans
                          (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                          (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]))) -}
41aa8e297e3422347717fd4c1bc983f1
  numDays1 ::
    Data.Time.Clock.Internal.UTCTime.UTCTime
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S(SS),1*U(1*U,U)><S(SS),1*U(1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w1 :: Data.Time.Clock.Internal.UTCTime.UTCTime) ->
                 case w of ww { Data.Time.Clock.Internal.UTCTime.UTCTime ww1 ww2 ->
                 case w1 of ww3 { Data.Time.Clock.Internal.UTCTime.UTCTime ww4 ww5 ->
                 Timestuff.$wnumDays ww1 ww2 ww4 ww5 } }) -}
3673ab3c96bedabbbf6751501d6a3316
  numYears ::
    Data.Time.Clock.Internal.UTCTime.UTCTime
    -> Data.Time.Clock.Internal.UTCTime.UTCTime
    -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S(SS),1*U(1*U,U)><S(SS),1*U(1*U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Time.Clock.Internal.UTCTime.UTCTime)
                   (w1 :: Data.Time.Clock.Internal.UTCTime.UTCTime) ->
                 case w of ww { Data.Time.Clock.Internal.UTCTime.UTCTime ww1 ww2 ->
                 case w1 of ww3 { Data.Time.Clock.Internal.UTCTime.UTCTime ww4 ww5 ->
                 Timestuff.$wnumYears ww1 ww2 ww4 ww5 } }) -}
ef798b0881c715cfdb374af94098d983
  numYears1 :: GHC.Integer.Type.Integer
  {- Unfolding: (31536000000000000000) -}
78b67bd6813b9e29347e2917049c595f
  utcMod ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,U>,
     Unfolding: (\ (hours :: GHC.Integer.Type.Integer)
                   (minutes :: GHC.Integer.Type.Integer)
                   (seconds :: GHC.Integer.Type.Integer) ->
                 GHC.Integer.Type.plusInteger
                   (GHC.Integer.Type.plusInteger
                      (GHC.Integer.Type.timesInteger hours Timestuff.dateTime2)
                      (GHC.Integer.Type.timesInteger minutes Timestuff.dateTime1))
                   seconds) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

