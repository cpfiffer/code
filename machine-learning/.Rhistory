source('~/.active-rstudio-document', echo=TRUE)
install.packages("tidyquant")
library(tidyqua)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/setup.R', echo=TRUE)
price
prices
x[appl] = prices
x = list()
x[appl] = prices
x$appl = prices
x
keras_array(prices)
install.packages("rsplit")
install.packages("rsample")
# Conversion
split <- initial_split(prices, prop = 0.8)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
split
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
test
keras_array(test)
price
prices
lag(prices)
lag(prices4date)
lag(prices$date)
lag(prices$close)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
test_y
head(test_y)
head(test)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train_y
head_train_y
head(train_y)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
prices
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
prices
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
test
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
test
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
test
test[1]
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
test
test$y
test_y
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
trian
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
test
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
test
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
test
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
head(train)
normalize((train))
head(normalize(train, 1))
head(normalize(train, 2))
head(normalize(train, 0))
head(normalize(train, 1))
sum(normalize(train, 1))
sum(normalize(train, 1)[1])
sum(normalize(train, 1))
sum(normalize(train, -1))
normalize(train, -1)
head(normalize(train, -1))
head(train)
head(normalize(train, 1))
tail(normalize(train, 1))
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
tail(train)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train
test
test_y
summary(test)
dim(test)
test_y
test[1]
test$1
test
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
length(train)
train[1]
train[1,1]
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
mean(test_y)
test_y
test_y[[1]]
test_y[[2]]
test_y[2]
test_y[[]]
typeof((test_y))
typeof(test_y)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
tray_y
train_y
mean(train_y)
test_y
split <- initial_split(prices, prop = 0.8)
train <- training(split)
test <- testing(split)
train_y <- train$y %>%
as.matrix() %>%
normalize(1)
train_y
train
train$y
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
split <- initial_split(prices, prop = 0.8)
train <- training(split)
test <- testing(split)
train_y <- train$y %>%
as.matrix() %>%
normalize(0)
train_y
# Conversion
prices$y <- lead(prices$close)
split <- initial_split(prices, prop = 0.8)
train <- training(split)
test <- testing(split)
train_y <- train$y %>%
as.matrix() %>%
normalize(2)
train_y
# Conversion
prices$y <- lead(prices$close)
split <- initial_split(prices, prop = 0.8)
train <- training(split)
test <- testing(split)
train_y <- train$y %>%
as.matrix() %>%
normalize(-1)
train_y
# Conversion
prices$y <- lead(prices$close)
split <- initial_split(prices, prop = 0.8)
train <- training(split)
test <- testing(split)
train_y <- train$y %>%
as.matrix() %>%
normalize(1)
train_y
train_y <- train$y %>%
normalize(1)
train_y)
train_y
train_y <- train$y %>%
normalize(0)
train_y
train_y <- train$y %>%
as.matrix() %>%
normalize(1)
train_y
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
# Conversion
prices$y <- lead(prices$close)
split <- initial_split(prices, prop = 0.8)
train <- training(split) %>% drop_na()
test <- testing(split) %>% drop_na()
train_y <- train$y %>%
as.matrix() %>%
normalize(1)
train_y
tail(train_y)
sum(train_y)
mean(train_y)
train_y <- train$y %>%
as.matrix() %>%
normalize(0)
mean(train_y)
tail(train_y)
train_y <- train$y %>%
as.matrix() %>%
normalize(-1)
mean(train_y)
mean(train_y)
train_y <- train$y %>%
as.matrix() %>%
normalize(1)
train_y
plot(train_y)
plot(train_y, type='l')
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
test
head(test)
head(test_y)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
# Generate dummy data
data <- matrix(runif(1000*100), nrow = 1000, ncol = 100)
labels <- matrix(round(runif(1000, min = 0, max = 1)), nrow = 1000, ncol = 1)
data
head(data)
head(labels)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
range((train_y))
range(train_y)
range(train)
head(train)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
?compile
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
summary(model)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
train <- training(split) %>% drop_na()
regularizer_l1(train)
train
train_y <- train$y %>%
as.matrix() %>%
normalize(1)
train_y
regularizer_l1(train_y)
predict(model)
predict(model, test)
test_y
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
rnorm()
rnorm(100)
rnorm(100, nrow(10))
rnorm(100, nrow=10
)
?rnorm
?runif
reshape(rnorm(100)
)
as.matrix(rnorm(100))
matrix(rnorm(100), 6)
matrix(rnorm(600), 6)
matrix(rnorm(600), ncol = 6)
# Test data
dummy <- matrix(rnorm(60000), ncol = 6)
dummy_y <- matrix(rnorm(10000, ncol = 1))
dummy_y <- matrix(rnorm(10000))
head(dummy)
head(dummy_y)
# Test data
source <- rnorm(60000)
dummy <- matrix(source, ncol = 6)
dummy_y <- matrix(sum(source))
dummy_y
rowsum(dummy)
colSums(dummy, )
colSums(dummy)
product(colSums(dummy))
prod(colSums(dummy))
rowSums(dummy)
colSums(dummy)
length(rowSums(dummy))
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
row_bums
source
rownums(sourcE)
rownums(source)
rowSums(source)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
predict(model, dummy)
predict(model, dummy) - dummy_y
head(dummy)
head(predict(model, dummy))
head(dummy_y)
head(predict(model, train))
head(train)
head(predict(model, train))
head(train_y)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
plot(history)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
history
summary(history)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/diagnostics.R', echo=TRUE)
source('~/code/machine-learning/setup.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
history
plot(history)
predict(model, test)
head(predict(model, test)0
head(predict(model, test))
head(test_y)
head(train)
head(predict(model, train))
head(train_y)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
head(predict(model, train))
head(train_y)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
head(predict(model, test))
head(test_y)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
tail(predict(model, train))
tail(train_y)
tail(predict(model, test))
tail(test_y)
source('~/code/machine-learning/stock-prediction.R', echo=TRUE)
